//////////////////////////////////////////////////////////////////////////////////////////
//
// normalize.scss | Sass version of normalize.css | @Effeilo
// based on normalize.css v3.0.1 | MIT License | git.io/normalize 
//
//////////////////////////////////////////////////////////////////////////////////////////


// Normalize settings
//////////////////////////////////////////////////////////////

$normalize-settings: (

	"options": (
		"explanatory comments":           	true, // true;false
		"legacy support for": (
			"ie 11":       			true, // true;false
			"ie 10":       			true, // true;false
			"ie 9":        			true, // true;false
			"safari":      			true, // true;false
			"firefox":     			true, // true;false
			"chrome":      			true, // true;false
			"opera":       			true, // true;false
		)
	),
	"parts": (
		"base": (
			"html":                         true, // true;false
			"reset margin":                 "body"// false;"list, separate, with, comma"
		),
		"html5 display definitions": (
			"block":                        true, // true;false
			"inline block":                 true, // true;false
			"audio":                        true, // true;false
			"hidden template":              true  // true;false
		),
		"links": (
			"background":                   true, // true;false
			"outline":                      true  // true;false
		),
		"text level semantics": (
			"abbr":                         true, // true;false
			"b strong":                     true, // true;false
			"dfn":                          true, // true;false
			"h1":                           true, // true;false
			"mark":                         true, // true;false
			"small":                        true, // true;false
			"sub sup":                      true  // true;false
		),
		"embedded content": (
			"img":                          true, // true;false
			"svg":                          true  // true;false
		),
		"grouping content": (
			"figure":                       true, // true;false
			"hr":                           true, // true;false
			"pre":                          true, // true;false
			"monospace":              	true  // true;false
		),
		"forms": (
			"form elements reset":          true, // true;false
			"button overflow":              true, // true;false
			"button select text transform": true, // true;false
			"button appearance":            true, // true;false
			"button input disabled":        true, // true;false
			"button input focus inner":     true, // true;false
			"input line height":            true, // true;false
			"input checkbox radio":         true, // true;false
			"input number":                 true, // true;false
			"input search":                 true, // true;false
			"fieldset":                     true, // true;false
			"legend":                       true, // true;false
			"textarea":                     true, // true;false 
			"optgroup":                     true  // true;false 
		),
		"tables": (
			"table":                        true, // true;false
			"td th":                        true  // true;false
		)
	)

);


// Normalize Credits
//////////////////////////////////////////////////////////////

/*! normalize.css v3.0.1 | MIT License | git.io/normalize | scss version git.io/NowdAA */


//////////////////////////////////////////////////////////////////////////////////////////
//
// normalize.scss core
//
//////////////////////////////////////////////////////////////////////////////////////////

// normalize settings function
//////////////////////////////////////////////////////////////
@function normalize-get($keys...) {

	$length: length($keys);
	$get: map-get($normalize-settings, nth($keys, 1));

	@if $length == 1 {
		$keys: nth($keys, 1);
	}

	@if $length > 1 {
		@for $i from 2 through $length {
			@if $get type-of($get) == 'map' {
				$get: map-get($get, nth($keys, $i));
			}
		}
	}

	@return $get;

}

//////////////////////////////////////////////////////////////////////////////////////////
//
// normalize.scss base
//
//////////////////////////////////////////////////////////////////////////////////////////

// normalize.scss base html
//////////////////////////////////////////////////////////////

@if normalize-get("parts", "base", "html") {

	@if normalize-get("options", "explanatory comments") { 
		/**
		 * 1. Set default font family to sans-serif.
		 * 2. Prevent iOS text size adjust after orientation change, without disabling
		 *    user zoom.
		 */
	}

	html {
		font-family: sans-serif; @if normalize-get("options", "explanatory comments") { /* 1 */ }
		-ms-text-size-adjust: 100%; @if normalize-get("options", "explanatory comments") { /* 2 */ }
		-webkit-text-size-adjust: 100%; @if normalize-get("options", "explanatory comments") { /* 2 */ }
	}

}


// normalize.scss reset margin
//////////////////////////////////////////////////////////////

@if normalize-get("parts", "base", "reset margin") {

	$reset-margin-tags:if(normalize-get("parts", "base", "reset margin"),normalize-get("parts", "base", "reset margin"),"");

	@if normalize-get("options", "explanatory comments") {  
		/**
		 * Remove default margin.
		 */
	}

	#{$reset-margin-tags} {
		margin: 0;
	}

}

//////////////////////////////////////////////////////////////////////////////////////////
//
// normalize.scss HTML5 display definitions
//
//////////////////////////////////////////////////////////////////////////////////////////

@if normalize-get("parts", "html5 display definitions", "block") or
	normalize-get("parts", "html5 display definitions", "inline block") or
	normalize-get("parts", "html5 display definitions", "audio") or
	normalize-get("parts", "html5 display definitions", "hidden template") {

	/* HTML5 display definitions
	   ========================================================================== */


// normalize.scss html5 display definitions block
//////////////////////////////////////////////////////////////

	@if normalize-get("parts", "html5 display definitions", "block") {
		
		@if normalize-get("options", "legacy support for", "ie 11") or 
			normalize-get("options", "legacy support for", "firefox") {

			@if normalize-get("options", "explanatory comments") { 
				/**
				 * Correct `block` display not defined for any HTML5 element in IE 8/9.
				 * Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox.
				 * Correct `block` display not defined for `main` in IE 11.
				 */
			}

			article,
			aside,
			details,
			figcaption,
			figure,
			footer,
			header,
			hgroup,
			main,
			nav,
			section,
			summary {
				display: block;
			}

		}

	}


// normalize.scss html5 display definitions inline block
//////////////////////////////////////////////////////////////

	@if normalize-get("parts", "html5 display definitions", "inline block") {

		@if normalize-get("options", "explanatory comments") { 
			/**
			 * 1. Correct `inline-block` display not defined in IE 8/9.
			 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
			 */
		}

		audio,
		canvas,
		progress,
		video {
			@if normalize-get("options", "legacy support for", "ie 9") { 
				display: inline-block; @if normalize-get("options", "explanatory comments") { /* 1 */ } 
			}
			@if normalize-get("options", "legacy support for", "chrome") or 
				normalize-get("options", "legacy support for", "safari") or 
				normalize-get("options", "legacy support for", "opera") { 
				vertical-align: baseline; @if normalize-get("options", "explanatory comments") { /* 2 */ } 
			}
		}

	}


// normalize.scss html5 display definitions audio
//////////////////////////////////////////////////////////////

	@if normalize-get("parts", "html5 display definitions", "audio") {

		@if normalize-get("options", "explanatory comments") { 
			/**
			 * Prevent modern browsers from displaying `audio` without controls.
			 * Remove excess height in iOS 5 devices.
			 */
		}

		audio:not([controls]) {
			display: none;
			height: 0;
		}

	}


// normalize.scss html5 display definitions hidden template
//////////////////////////////////////////////////////////////

	@if normalize-get("parts", "html5 display definitions", "hidden template") {

		@if normalize-get("options", "legacy support for", "ie 11") or 
			normalize-get("options", "legacy support for", "safari") or 
			normalize-get("options", "legacy support for", "firefox") {

			@if normalize-get("options", "explanatory comments") { 
				/**
				 * Address `[hidden]` styling not present in IE 8/9/10.
				 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
				 */
			}

			[hidden],
			template {
				display: none;
			}

		}

	}

}

//////////////////////////////////////////////////////////////////////////////////////////
//
// normalize.scss links
//
//////////////////////////////////////////////////////////////////////////////////////////

@if normalize-get("parts", "links", "background") or
	normalize-get("parts", "links", "outline") {

	/* Links
	   ========================================================================== */


// normalize.scss links background
//////////////////////////////////////////////////////////////

	@if normalize-get("parts", "links", "background") {

		@if normalize-get("options", "legacy support for", "ie 10") {

			@if normalize-get("options", "explanatory comments") { 
				/**
				 * Remove the gray background color from active links in IE 10.
				 */
			}

			a {
				background: transparent;
			}

		}

	}


// normalize.scss links outline
//////////////////////////////////////////////////////////////

	@if normalize-get("parts", "links", "outline") {

		@if normalize-get("options", "explanatory comments") { 
			/**
			 * Improve readability when focused and also mouse hovered in all browsers.
			 */
		}

		a:active,
		a:hover {
			outline: 0;
		}

	}

}

//////////////////////////////////////////////////////////////////////////////////////////
//
// normalize.scss text level semantics
//
//////////////////////////////////////////////////////////////////////////////////////////

@if normalize-get("parts", "text level semantics", "abbr") or
    normalize-get("parts", "text level semantics", "b strong") or
    normalize-get("parts", "text level semantics", "dfn") or
    normalize-get("parts", "text level semantics", "h1") or
    normalize-get("parts", "text level semantics", "mark") or
    normalize-get("parts", "text level semantics", "small") or
    normalize-get("parts", "text level semantics", "sub sup") {

    /* Text-level semantics
       ========================================================================== */


// normalize.scss text level semantics abbr
//////////////////////////////////////////////////////////////

	@if normalize-get("parts", "text level semantics", "abbr") {

		@if normalize-get("options", "legacy support for", "ie 11") or 
			normalize-get("options", "legacy support for", "safari") or 
			normalize-get("options", "legacy support for", "chrome") {

			@if normalize-get("options", "explanatory comments") {
				/**
				 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
				 */
			}

			abbr[title] {
				border-bottom: 1px dotted;
			}

		}

	}


// normalize.scss text level semantics b strong
//////////////////////////////////////////////////////////////

	@if normalize-get("parts", "text level semantics", "b strong") {

		@if normalize-get("options", "legacy support for", "firefox") or 
			normalize-get("options", "legacy support for", "safari") or 
			normalize-get("options", "legacy support for", "chrome") {

			@if normalize-get("options", "explanatory comments") {
				/**
				 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
				 */
			}

			b,
			strong {
				font-weight: bold;
			}

		}

	}


// normalize.scss text level semantics dfn
//////////////////////////////////////////////////////////////

    @if normalize-get("parts", "text level semantics", "dfn") {

    	@if normalize-get("options", "legacy support for", "safari") or 
    		normalize-get("options", "legacy support for", "chrome") {

			@if normalize-get("options", "explanatory comments") {
				/**
				 * Address styling not present in Safari and Chrome.
				 */
			}

			dfn {
				font-style: italic;
			}

		}

    }


// normalize.scss text level semantics h1
//////////////////////////////////////////////////////////////

    @if normalize-get("parts", "text level semantics", "h1") {

    	@if normalize-get("options", "legacy support for", "firefox") or 
	    	normalize-get("options", "legacy support for", "safari") or 
	    	normalize-get("options", "legacy support for", "chrome") {

			@if normalize-get("options", "explanatory comments") { 
				/**
				 * Address variable `h1` font-size and margin within `section` and `article`
				 * contexts in Firefox 4+, Safari, and Chrome.
				 */
			}

			h1 {
				font-size: 2em;
				margin: 0.67em 0;
			}

		}

    }


// normalize.scss text level semantics mark
//////////////////////////////////////////////////////////////

    @if normalize-get("parts", "text level semantics", "mark") {

    	@if normalize-get("options", "legacy support for", "ie 9") {

			@if normalize-get("options", "explanatory comments") { 
				/**
				 * Address styling not present in IE 8/9.
				 */
			}

			mark {
				background: #ff0;
				color: #000;
			}

		}

    }


// normalize.scss text level semantics small
//////////////////////////////////////////////////////////////

    @if normalize-get("parts", "text level semantics", "small") {

		@if normalize-get("options", "explanatory comments") {
			/**
			 * Address inconsistent and variable font size in all browsers.
			 */
		}

		small {
			font-size: 80%;
		}

    }


// normalize.scss text level semantics sub sup
//////////////////////////////////////////////////////////////

    @if normalize-get("parts", "text level semantics", "sub sup") {

		@if normalize-get("options", "explanatory comments") {
			/**
			 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
			 */
		}

		sub,
		sup {
			font-size: 75%;
			line-height: 0;
			position: relative;
			vertical-align: baseline;
		}

		sup {
			top: -0.5em;
		}

		sub {
			bottom: -0.25em;
		}

    }

}

//////////////////////////////////////////////////////////////////////////////////////////
//
// normalize.scss embedded content
//
//////////////////////////////////////////////////////////////////////////////////////////

@if normalize-get("parts", "embedded content", "img") or
  	normalize-get("parts", "embedded content", "svg") {

	/* Embedded content
	   ========================================================================== */


// normalize.scss embedded content img
//////////////////////////////////////////////////////////////

    @if normalize-get("parts", "embedded content", "img") {

    	@if normalize-get("options", "legacy support for", "ie 10") {

			@if normalize-get("options", "explanatory comments") {
				/**
				 * Remove border when inside `a` element in IE 8/9/10.
				 */
			}

			img {
				border: 0;
			}

		}

    }


// normalize.scss embedded content svg
//////////////////////////////////////////////////////////////

    @if normalize-get("parts", "embedded content", "svg") {

    	@if normalize-get("options", "legacy support for", "ie 11") {

			@if normalize-get("options", "explanatory comments") { 
				/**
				 * Correct overflow not hidden in IE 9/10/11.
				 */
			}

			svg:not(:root) {
				overflow: hidden;
			}

		}

    }

}

//////////////////////////////////////////////////////////////////////////////////////////
//
// normalize.scss grouping content
//
//////////////////////////////////////////////////////////////////////////////////////////

@if normalize-get("parts", "grouping content", "figure") or
  	normalize-get("parts", "grouping content", "hr") or
  	normalize-get("parts", "grouping content", "pre") or
  	normalize-get("parts", "grouping content", "monospace") {

	/* Grouping content
	   ========================================================================== */


// normalize.scss grouping content figure
//////////////////////////////////////////////////////////////

	@if normalize-get("parts", "grouping content", "figure") {

		@if normalize-get("options", "legacy support for", "ie 9") or 
			normalize-get("options", "legacy support for", "safari") {

			@if normalize-get("options", "explanatory comments") {
				/**
				 * Address margin not present in IE 8/9 and Safari.
				 */
			}

			figure {
				margin: 1em 40px;
			}

		}

	}


// normalize.scss grouping content hr
//////////////////////////////////////////////////////////////

    @if normalize-get("parts", "grouping content", "hr") {

    	@if normalize-get("options", "legacy support for", "firefox") {

			@if normalize-get("options", "explanatory comments") {
				/**
				 * Address differences between Firefox and other browsers.
				 */
			}

			hr {
				-moz-box-sizing: content-box;
				box-sizing: content-box;
				height: 0;
			}

		}

    }


// normalize.scss grouping content pre
//////////////////////////////////////////////////////////////

    @if normalize-get("parts", "grouping content", "pre") {

		@if normalize-get("options", "explanatory comments") {
			/**
			 * Contain overflow in all browsers.
			 */
		}

		pre {
			overflow: auto;
		}

    }


// normalize.scss grouping content monospace
//////////////////////////////////////////////////////////////

    @if normalize-get("parts", "grouping content", "code kbd pre samp") {

		@if normalize-get("options", "explanatory comments") {
			/**
			 * Address odd `em`-unit font size rendering in all browsers.
			 */
		}

		code,
		kbd,
		pre,
		samp {
			font-family: monospace, monospace;
			font-size: 1em;
		}

    }

}

//////////////////////////////////////////////////////////////////////////////////////////
//
// normalize.scss forms
//
//////////////////////////////////////////////////////////////////////////////////////////

@if normalize-get("parts", "forms", "form elements reset") or
	normalize-get("parts", "forms", "button overflow") or
	normalize-get("parts", "forms", "button select text transform") or
	normalize-get("parts", "forms", "button appearance") or
	normalize-get("parts", "forms", "button input disabled") or
	normalize-get("parts", "forms", "button input focus inner") or
	normalize-get("parts", "forms", "input line height") or
	normalize-get("parts", "forms", "input checkbox radio") or
	normalize-get("parts", "forms", "input number") or
	normalize-get("parts", "forms", "input search") or
	normalize-get("parts", "forms", "fieldset") or
	normalize-get("parts", "forms", "legend") or
	normalize-get("parts", "forms", "textarea") {

	/* Forms
	   ========================================================================== */

    @if normalize-get("options", "explanatory comments") {
      /**
       * Known limitation: by default, Chrome and Safari on OS X allow very limited
       * styling of `select`, unless a `border` property is set.
       */
    }


// normalize.scss forms form elements reset
//////////////////////////////////////////////////////////////

    @if normalize-get("parts", "forms", "form elements reset") {

		@if normalize-get("options", "explanatory comments") { 
			/**
			 * 1. Correct color not being inherited.
			 *    Known issue: affects color of disabled elements.
			 * 2. Correct font properties not being inherited.
			 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
			 */
		}

		button,
		input,
		optgroup,
		select,
		textarea {
			color: inherit; @if normalize-get("options", "explanatory comments") { /* 1 */ }
			font: inherit; @if normalize-get("options", "explanatory comments") { /* 2 */ }
			@if normalize-get("options", "legacy support for", "firefox") or 
				normalize-get("options", "legacy support for", "safari") or 
				normalize-get("options", "legacy support for", "chrome") { 
				margin: 0; @if normalize-get("options", "explanatory comments") { /* 3 */ } 
			}
		}

    }


// normalize.scss forms button overflow
//////////////////////////////////////////////////////////////

    @if normalize-get("parts", "forms", "button overflow") {

    	@if normalize-get("options", "legacy support for", "ie 11") {

			@if normalize-get("options", "explanatory comments") { 
				/**
				 * Address `overflow` set to `hidden` in IE 8/9/10/11.
				 */
			}

			button {
				overflow: visible;
			}

		}

    }


// normalize.scss forms button select text transform
//////////////////////////////////////////////////////////////

    @if normalize-get("parts", "forms", "button select text transform") {

    	@if normalize-get("options", "legacy support for", "ie 11") or 
	    	normalize-get("options", "legacy support for", "firefox") or 
	    	normalize-get("options", "legacy support for", "opera") {

			@if normalize-get("options", "explanatory comments") { 
				/**
				 * Address inconsistent `text-transform` inheritance for `button` and `select`.
				 * All other form control elements do not inherit `text-transform` values.
				 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
				 * Correct `select` style inheritance in Firefox.
				 */
			}

			button,
			select {
				text-transform: none;
			}

		}

    }


// normalize.scss forms button appearance
//////////////////////////////////////////////////////////////

    @if normalize-get("parts", "forms", "button appearance") {

		@if normalize-get("options", "explanatory comments") { 
			/**
			 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
			 *    and `video` controls.
			 * 2. Correct inability to style clickable `input` types in iOS.
			 * 3. Improve usability and consistency of cursor style between image-type
			 *    `input` and others.
			 */
		}

		button,
		html input[type="button"], 
		input[type="reset"],
		input[type="submit"] { @if normalize-get("options", "explanatory comments") { /* 1 */ }
			-webkit-appearance: button; @if normalize-get("options", "explanatory comments") { /* 2 */ }
			cursor: pointer; @if normalize-get("options", "explanatory comments") { /* 3 */ }
		}

    }


// normalize.scss forms button input disabled
//////////////////////////////////////////////////////////////

    @if normalize-get("parts", "forms", "button input disabled") {

		@if normalize-get("options", "explanatory comments") {  
			/**
			 * Re-set default cursor for disabled elements.
			 */
		}

		button[disabled],
		html input[disabled] {
			cursor: default;
		}

    }


// normalize.scss forms button input focus inner
//////////////////////////////////////////////////////////////

    @if normalize-get("parts", "forms", "button input focus inner") {

    	@if normalize-get("options", "legacy support for", "firefox") {

			@if normalize-get("options", "explanatory comments") {  
				/**
				 * Remove inner padding and border in Firefox 4+.
				 */
			}

			button::-moz-focus-inner,
			input::-moz-focus-inner {
				border: 0;
				padding: 0;
			}

		}

    }


// normalize.scss forms input line height
//////////////////////////////////////////////////////////////

    @if normalize-get("parts", "forms", "input line height") {

    	@if normalize-get("options", "legacy support for", "firefox") {

			@if normalize-get("options", "explanatory comments") { 
				/**
				 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
				 * the UA stylesheet.
				 */
			}

			input {
				line-height: normal;
			}

		}

    }


// normalize.scss forms input checkbox radio
//////////////////////////////////////////////////////////////

    @if normalize-get("parts", "forms", "input checkbox radio") {

    	@if normalize-get("options", "legacy support for", "ie 10") {

			@if normalize-get("options", "explanatory comments") { 
				/**
				 * It's recommended that you don't attempt to style these elements.
				 * Firefox's implementation doesn't respect box-sizing, padding, or width.
				 *
				 * 1. Address box sizing set to `content-box` in IE 8/9/10.
				 * 2. Remove excess padding in IE 8/9/10.
				 */
			}

			input[type="checkbox"],
			input[type="radio"] {
				box-sizing: border-box; @if normalize-get("options", "explanatory comments") { /* 1 */ }
				padding: 0; @if normalize-get("options", "explanatory comments") { /* 2 */ }
			}

		}

    }


// normalize.scss forms input number
//////////////////////////////////////////////////////////////

    @if normalize-get("parts", "forms", "input number") {

    	@if normalize-get("options", "legacy support for", "chrome") {

			@if normalize-get("options", "explanatory comments") {
				/**
				 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
				 * `font-size` values of the `input`, it causes the cursor style of the
				 * decrement button to change from `default` to `text`.
				 */
			}

			input[type="number"]::-webkit-inner-spin-button,
			input[type="number"]::-webkit-outer-spin-button {
				height: auto;
			}

		}

    }


// normalize.scss forms input search
//////////////////////////////////////////////////////////////

    @if normalize-get("parts", "forms", "input search") {

    	@if normalize-get("options", "legacy support for", "chrome") or 
	    	normalize-get("options", "legacy support for", "safari") or 
	    	normalize-get("options", "legacy support for", "firefox") {

			@if normalize-get("options", "explanatory comments") { 
				/**
				 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
				 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
				 *    (include `-moz` to future-proof).
				 */
			}

			input[type="search"] {
				-webkit-appearance: textfield; @if normalize-get("options", "explanatory comments") { /* 1 */ }
				-moz-box-sizing: content-box;
				-webkit-box-sizing: content-box; @if normalize-get("options", "explanatory comments") { /* 2 */ }
				box-sizing: content-box;
			}

		}

		@if normalize-get("options", "legacy support for", "chrome") or 
			normalize-get("options", "legacy support for", "safari") {

			@if normalize-get("options", "explanatory comments") {
				/**
				 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
				 * Safari (but not Chrome) clips the cancel button when the search input has
				 * padding (and `textfield` appearance).
				 */
			}

			input[type="search"]::-webkit-search-cancel-button,
			input[type="search"]::-webkit-search-decoration {
				-webkit-appearance: none;
			}

		}

    }


// normalize.scss forms fieldset
//////////////////////////////////////////////////////////////

    @if normalize-get("parts", "forms", "fieldset") {

		@if normalize-get("options", "explanatory comments") {
			/**
			 * Define consistent border, margin, and padding.
			 */
		}

		fieldset {
			border: 1px solid #c0c0c0;
			margin: 0 2px;
			padding: 0.35em 0.625em 0.75em;
		}

    }


// normalize.scss forms legend
//////////////////////////////////////////////////////////////

    @if normalize-get("parts", "forms", "legend") {

		@if normalize-get("options", "explanatory comments") {
			/**
			 * 1. Correct `color` not being inherited in IE 8/9/10/11.
			 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
			 */
		}

		legend {
			@if normalize-get("options", "legacy support for", "ie 11") { 
				border: 0; @if normalize-get("options", "explanatory comments") { /* 1 */ } 
			}
			padding: 0; @if normalize-get("options", "explanatory comments") { /* 2 */ }
		}

    }


// normalize.scss forms textarea
//////////////////////////////////////////////////////////////

    @if normalize-get("parts", "forms", "textarea") {

    	@if normalize-get("options", "legacy support for", "ie 11") {

			@if normalize-get("options", "explanatory comments") { 
				/**
				 * Remove default vertical scrollbar in IE 8/9/10/11.
				 */
			}

			textarea {
				overflow: auto;
			}

		}

    }


// normalize.scss forms optgroup
//////////////////////////////////////////////////////////////

    @if normalize-get("parts", "forms", "optgroup") {

		@if normalize-get("options", "explanatory comments") {
			/**
			 * Don't inherit the `font-weight` (applied by a rule above).
			 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
			 */
		}

		optgroup {
			font-weight: bold;
		}

    }

}

//////////////////////////////////////////////////////////////////////////////////////////
//
// normalize.scss tables
//
//////////////////////////////////////////////////////////////////////////////////////////

@if normalize-get("parts", "tables", "table") or
	normalize-get("parts", "tables", "td th") {

	/* Tables
	   ========================================================================== */


// normalize.scss tables table
//////////////////////////////////////////////////////////////

	@if normalize-get("parts", "tables", "table") {

		@if normalize-get("options", "explanatory comments") {
			/**
			 * Remove most spacing between table cells.
			 */
		}

		table {
			border-collapse: collapse;
			border-spacing: 0;
		}

	}


// normalize.scss tables td th
//////////////////////////////////////////////////////////////

    @if normalize-get("parts", "tables", "td th") {

		td,
		th {
			padding: 0;
		}

    }

}
