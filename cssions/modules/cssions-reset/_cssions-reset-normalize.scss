//////////////////////////////////////////////////////////////////////////////////////////
//
// CSSIONS RESET METHOD : NORMALIZE
//
//////////////////////////////////////////////////////////////////////////////////////////

// cssions meyer variables
//////////////////////////////////////////////////////////////

$normalize-base-tags: body;
$normalize-html5-block-tags: article, aside, details, figcaption, figure, footer, header, hgroup, main, nav, section, summary; 
$normalize-html5-inline-block-tags: audio, canvas, progress, video ;

$base-tags:if(reset-get("base tags") == default,$normalize-base-tags,reset-get("base tags"));
$html5-block-tags:if(reset-get("html5 block tag") == default,$normalize-html5-block-tags,reset-get("html5 block tag"));
$html5-inline-block-tags:if(reset-get("html5 inline block tag") == default,$normalize-html5-inline-block-tags,reset-get("html5 inline block tag"));

// cssions normalize initialisation
//////////////////////////////////////////////////////////////

@if reset-get("reset") == normalize {

  /* normalize.css v3.0.1 | MIT License | git.io/normalize
     ========================================================================== */

  @if normalize-get("base", "html") {

    @if cssions-get("explanations", "explanations comments") { 
      /**
      * 1. Set default font family to sans-serif.
      * 2. Prevent iOS text size adjust after orientation change, without disabling
      *    user zoom.
      */
    }

    html {
      font-family: sans-serif; @if cssions-get("explanations", "explanations comments") { /* 1 */ }
      -ms-text-size-adjust: 100%; @if cssions-get("explanations", "explanations comments") { /* 2 */ }
      -webkit-text-size-adjust: 100%; @if cssions-get("explanations", "explanations comments") { /* 2 */ }
    }

  }

  @if normalize-get("base", "reset margin") {

    @if cssions-get("explanations", "explanations comments") { 
      /**
       * Remove default margin.
       */
    }

    #{$base-tags} {
      margin: 0;
    }

  }

  @if normalize-get("html5 display definitions", "block") or
      normalize-get("html5 display definitions", "inline block") or
      normalize-get("html5 display definitions", "audio") or
      normalize-get("html5 display definitions", "hidden template") {

    /* HTML5 display definitions
       ========================================================================== */

    @if normalize-get("html5 display definitions", "block") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * Correct `block` display not defined for any HTML5 element in IE 8/9.
         * Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox.
         * Correct `block` display not defined for `main` in IE 11.
         */
      }

      #{$html5-block-tags} {
        display: block;
      }

    }

    @if normalize-get("html5 display definitions", "inline block") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * 1. Correct `inline-block` display not defined in IE 8/9.
         * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
         */
      }

      #{$html5-inline-block-tags} {
        display: inline-block; @if cssions-get("explanations", "explanations comments") { /* 1 */ }
        vertical-align: baseline; @if cssions-get("explanations", "explanations comments") { /* 2 */ }
      }

    }

    @if normalize-get("html5 display definitions", "audio") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * Prevent modern browsers from displaying `audio` without controls.
         * Remove excess height in iOS 5 devices.
         */
      }

      audio:not([controls]) {
        display: none;
        height: 0;
      }

    }

    @if normalize-get("html5 display definitions", "hidden template") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * Address `[hidden]` styling not present in IE 8/9/10.
         * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
         */
      }

      [hidden],
      template {
        display: none;
      }

    }

  }

  @if normalize-get("links", "background") or
      normalize-get("links", "outline") {

    /* Links
       ========================================================================== */

    @if normalize-get("links", "background") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * Remove the gray background color from active links in IE 10.
         */
      }

      a {
        background: transparent;
      }

    }

    @if normalize-get("links", "outline") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * Improve readability when focused and also mouse hovered in all browsers.
         */
      }

      a:active,
      a:hover {
        outline: 0;
      }

    }

  }

  @if normalize-get("text level semantics", "abbr") or
      normalize-get("text level semantics", "b strong") or
      normalize-get("text level semantics", "dfn") or
      normalize-get("text level semantics", "h1") or
      normalize-get("text level semantics", "mark") or
      normalize-get("text level semantics", "small") or
      normalize-get("text level semantics", "sub sup") {

    /* Text-level semantics
       ========================================================================== */

    @if normalize-get("text level semantics", "abbr") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
         */
      }

      abbr[title] {
        border-bottom: 1px dotted;
      }

    }

    @if normalize-get("text level semantics", "b strong") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
         */
      }

      b,
      strong {
        font-weight: bold;
      }

    }

    @if normalize-get("text level semantics", "dfn") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * Address styling not present in Safari and Chrome.
         */
      }

      dfn {
        font-style: italic;
      }

    }

    @if normalize-get("text level semantics", "h1") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * Address variable `h1` font-size and margin within `section` and `article`
         * contexts in Firefox 4+, Safari, and Chrome.
         */
      }

      h1 {
        font-size: 2em;
        margin: 0.67em 0;
      }

    }

    @if normalize-get("text level semantics", "mark") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * Address styling not present in IE 8/9.
         */
      }

      mark {
        background: #ff0;
        color: #000;
      }

    }

    @if normalize-get("text level semantics", "small") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * Address inconsistent and variable font size in all browsers.
         */
      }

      small {
        font-size: 80%;
      }

    }

    @if normalize-get("text level semantics", "sub sup") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * Prevent `sub` and `sup` affecting `line-height` in all browsers.
         */
      }

      sub,
      sup {
        font-size: 75%;
        line-height: 0;
        position: relative;
        vertical-align: baseline;
      }

      sup {
        top: -0.5em;
      }

      sub {
        bottom: -0.25em;
      }

    }

  }

  @if normalize-get("embedded content", "img") or
      normalize-get("embedded content", "svg") {

  /* Embedded content
     ========================================================================== */

    @if normalize-get("embedded content", "img") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * Remove border when inside `a` element in IE 8/9/10.
         */
      }

      img {
        border: 0;
      }

    }

    @if normalize-get("embedded content", "svg") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * Correct overflow not hidden in IE 9/10/11.
         */
      }

      svg:not(:root) {
        overflow: hidden;
      }

    }

  }

  @if normalize-get("grouping content", "figure") or
      normalize-get("grouping content", "hr") or
      normalize-get("grouping content", "pre") or
      normalize-get("grouping content", "code kbd pre samp") {

    /* Grouping content
       ========================================================================== */

    @if normalize-get("grouping content", "figure") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * Address margin not present in IE 8/9 and Safari.
         */
      }

      figure {
        margin: 1em 40px;
      }

    }


    @if normalize-get("grouping content", "hr") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * Address differences between Firefox and other browsers.
         */
      }

      hr {
        -moz-box-sizing: content-box;
        box-sizing: content-box;
        height: 0;
      }

    }

    @if normalize-get("grouping content", "pre") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * Contain overflow in all browsers.
         */
      }

      pre {
        overflow: auto;
      }

    }

    @if normalize-get("grouping content", "code kbd pre samp") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * Address odd `em`-unit font size rendering in all browsers.
         */
      }

      code,
      kbd,
      pre,
      samp {
        font-family: monospace, monospace;
        font-size: 1em;
      }

    }

  }

  @if normalize-get("forms", "form elements reset") or
      normalize-get("forms", "button overflow") or
      normalize-get("forms", "button select text transform") or
      normalize-get("forms", "button appearance") or
      normalize-get("forms", "button input disabled") or
      normalize-get("forms", "button input focus inner") or
      normalize-get("forms", "input line height") or
      normalize-get("forms", "input checkbox radio") or
      normalize-get("forms", "input number") or
      normalize-get("forms", "input search") or
      normalize-get("forms", "fieldset") or
      normalize-get("forms", "legend") or
      normalize-get("forms", "textarea") {

    /* Forms
       ========================================================================== */

    @if cssions-get("explanations", "explanations comments") { 
      /**
       * Known limitation: by default, Chrome and Safari on OS X allow very limited
       * styling of `select`, unless a `border` property is set.
       */
    }

    @if normalize-get("forms", "form elements reset") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * 1. Correct color not being inherited.
         *    Known issue: affects color of disabled elements.
         * 2. Correct font properties not being inherited.
         * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
         */
      }

      button,
      input,
      optgroup,
      select,
      textarea {
        color: inherit; @if cssions-get("explanations", "explanations comments") { /* 1 */ }
        font: inherit; @if cssions-get("explanations", "explanations comments") { /* 2 */ }
        margin: 0; @if cssions-get("explanations", "explanations comments") { /* 3 */ }
      }

    }

    @if normalize-get("forms", "button overflow") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * Address `overflow` set to `hidden` in IE 8/9/10/11.
         */
      }

      button {
        overflow: visible;
      }

    }

    @if normalize-get("forms", "button select text transform") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * Address inconsistent `text-transform` inheritance for `button` and `select`.
         * All other form control elements do not inherit `text-transform` values.
         * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
         * Correct `select` style inheritance in Firefox.
         */
      }

      button,
      select {
        text-transform: none;
      }

    }

    @if normalize-get("forms", "button appearance") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
         *    and `video` controls.
         * 2. Correct inability to style clickable `input` types in iOS.
         * 3. Improve usability and consistency of cursor style between image-type
         *    `input` and others.
         */
      }

      button,
      html input[type="button"], 
      input[type="reset"],
      input[type="submit"] { @if cssions-get("explanations", "explanations comments") { /* 1 */ }
        -webkit-appearance: button; @if cssions-get("explanations", "explanations comments") { /* 2 */ }
        cursor: pointer; @if cssions-get("explanations", "explanations comments") { /* 3 */ }
      }

    }

    @if normalize-get("forms", "button input disabled") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * Re-set default cursor for disabled elements.
         */
      }

      button[disabled],
      html input[disabled] {
        cursor: default;
      }

    }

    @if normalize-get("forms", "button input focus inner") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * Remove inner padding and border in Firefox 4+.
         */
      }

      button::-moz-focus-inner,
      input::-moz-focus-inner {
        border: 0;
        padding: 0;
      }

    }

    @if normalize-get("forms", "input line height") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * Address Firefox 4+ setting `line-height` on `input` using `!important` in
         * the UA stylesheet.
         */
      }

      input {
        line-height: normal;
      }

    }

    @if normalize-get("forms", "input checkbox radio") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * It's recommended that you don't attempt to style these elements.
         * Firefox's implementation doesn't respect box-sizing, padding, or width.
         *
         * 1. Address box sizing set to `content-box` in IE 8/9/10.
         * 2. Remove excess padding in IE 8/9/10.
         */
      }

      input[type="checkbox"],
      input[type="radio"] {
        box-sizing: border-box; @if cssions-get("explanations", "explanations comments") { /* 1 */ }
        padding: 0; @if cssions-get("explanations", "explanations comments") { /* 2 */ }
      }

    }

    @if normalize-get("forms", "input number") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * Fix the cursor style for Chrome's increment/decrement buttons. For certain
         * `font-size` values of the `input`, it causes the cursor style of the
         * decrement button to change from `default` to `text`.
         */
      }

      input[type="number"]::-webkit-inner-spin-button,
      input[type="number"]::-webkit-outer-spin-button {
        height: auto;
      }

    }

    @if normalize-get("forms", "input search") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
         * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
         *    (include `-moz` to future-proof).
         */
      }

      input[type="search"] {
        -webkit-appearance: textfield; @if cssions-get("explanations", "explanations comments") { /* 1 */ }
        -moz-box-sizing: content-box;
        -webkit-box-sizing: content-box; @if cssions-get("explanations", "explanations comments") { /* 2 */ }
        box-sizing: content-box;
      }

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * Remove inner padding and search cancel button in Safari and Chrome on OS X.
         * Safari (but not Chrome) clips the cancel button when the search input has
         * padding (and `textfield` appearance).
         */
      }

      input[type="search"]::-webkit-search-cancel-button,
      input[type="search"]::-webkit-search-decoration {
        -webkit-appearance: none;
      }

    }

    @if normalize-get("forms", "fieldset") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * Define consistent border, margin, and padding.
         */
      }

      fieldset {
        border: 1px solid #c0c0c0;
        margin: 0 2px;
        padding: 0.35em 0.625em 0.75em;
      }

    }

    @if normalize-get("forms", "legend") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * 1. Correct `color` not being inherited in IE 8/9/10/11.
         * 2. Remove padding so people aren't caught out if they zero out fieldsets.
         */
      }

      legend {
        border: 0; @if cssions-get("explanations", "explanations comments") { /* 1 */ }
        padding: 0; @if cssions-get("explanations", "explanations comments") { /* 2 */ }
      }

    }

    @if normalize-get("forms", "textarea") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * Remove default vertical scrollbar in IE 8/9/10/11.
         */
      }

      textarea {
        overflow: auto;
      }

    }

    @if normalize-get("forms", "optgroup") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * Don't inherit the `font-weight` (applied by a rule above).
         * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
         */
      }

      optgroup {
        font-weight: bold;
      }

    }

  }

  @if normalize-get("tables", "table") or
      normalize-get("tables", "td th") {

    /* Tables
       ========================================================================== */

    @if normalize-get("tables", "table") {

      @if cssions-get("explanations", "explanations comments") { 
        /**
         * Remove most spacing between table cells.
         */
      }

      table {
        border-collapse: collapse;
        border-spacing: 0;
      }

    }

    @if normalize-get("tables", "td th") {

      td,
      th {
        padding: 0;
      }

    }

  }

}