//////////////////////////////////////////////////////////////////////////////////////////
//
// CSSIONS RESET METHOD : YUI3 RESET
//
//////////////////////////////////////////////////////////////////////////////////////////


// cssions YUI3 variables
//////////////////////////////////////////////////////////////

$yui3-base-tags: body, div, dl, dt, dd, ul, ol, li, h1, h2, h3, h4, h5, h6, pre, code, form, fieldset, legend, input, textarea, p, blockquote, th, td;

$base-tags:if(reset-get("base tags") == default,$yui3-base-tags,reset-get("base tags"));


// cssions meyer initialisation
//////////////////////////////////////////////////////////////

@if reset-get("reset") == yui3 {

  /*
  YUI 3.16.0 (build 76f0e08)
  Copyright 2014 Yahoo! Inc. All rights reserved.
  Licensed under the BSD License.
  http://yuilibrary.com/license/
  */

  html{
    @if yui3-get("html", "background color") {  background:#FFF; }
    @if yui3-get("html", "color") {  color:#000; }
  }

  @if yui3-get("base", "margin") or
      yui3-get("base", "padding") {

    @if cssions-get("explanations", "explanations comments") { 

      @if cssions-get("explanations", "explanations lang") == fr {
        /**
         * 1. On supprime les marges externes par défaut.
         * 2. On supprime les marges internes par défaut.
         */ 
      }

      @else { 
       /**
        * 1. Remove default margin.
        * 2. Remove default padding.
        */
      }

    }

    #{$base-tags} {
      @if yui3-get("base", "margin") { margin:0; @if cssions-get("explanations", "explanations comments") { /* 1 */ } }
      @if yui3-get("base", "padding") { padding:0; @if cssions-get("explanations", "explanations comments") { /* 2 */ } }
    }

  }

  @if yui3-get("parts", "tables") {

    @if cssions-get("explanations", "explanations comments") { 

      @if cssions-get("explanations", "explanations lang") == fr {
        /**
         * On supprime la majorité des espacements entre les 
           cellules des tableaux.
         */
      }

      @else { 
        /**
         * Remove most spacing between table cells.
         */
      }

    }

    table {
      border-collapse:collapse;
      border-spacing:0;
    }

  }

  @if yui3-get("parts", "img fieldset") {

    @if cssions-get("explanations", "explanations comments") {

      @if cssions-get("explanations", "explanations lang") == fr {
        /**
         * On supprime les bordures par defaut de l'élement "fieldset".
         * On supprime les bordures des images quand elles sont dans 
           l'élément `a` pour IE 8/9/10.
         */
      }

      @else { 
        /**
         * Remove default border on "fieldset" element.
         * Remove border when inside `a` element in IE 8/9/10.
         */
      }

    }

    fieldset,
    img {
      border:0;
    }

  }

  @if yui3-get("parts", "text semantics styles") {

    @if cssions-get("explanations", "explanations comments") {

      @if cssions-get("explanations", "explanations lang") == fr {
        /**
         * On supprime les styles par defaut des fonts pour les 
           éléments de textes.
         */
      }

      @else { 
        /**
         * Remove default font for text elements.
         */
      }

    }

    address,
    caption,
    cite,
    code,
    dfn,
    em,
    strong,
    th,
    var {
      font-style:normal;
      font-weight:normal;
    }

  }

  @if yui3-get("parts", "lists") {

    @if cssions-get("explanations", "explanations comments") {

      @if cssions-get("explanations", "explanations lang") == fr {
        /**
         * On supprime les styles par défaut des listes.
         */
      }

      @else { 
        /**
         * Remove default list style.
         */
      }

    }

    ol,
    ul {
      list-style:none;
    }

  }

  @if yui3-get("parts", "caption th") {

    @if cssions-get("explanations", "explanations comments") {

      @if cssions-get("explanations", "explanations lang") == fr {
        /**
         * On harmonise l'alignement du texte pour les éléments "caption" et "th".
         */
      }

      @else { 
        /**
         * Aligns the text alignment for the elements "caption" and "th".
         */
      }

    }

    caption,
    th {
      text-align:left;
    }

  }

  @if yui3-get("parts", "headers") {

    @if cssions-get("explanations", "explanations comments") {

      @if cssions-get("explanations", "explanations lang") == fr {
        /**
         * 1. On supprime les valeurs par defaut des éléments de titres 
              attribués par les navigateurs.
         * 2. On supprime la forte graisse des titres.
         */
      }

      @else { 
        /**
         * 1. Remove default font-size values allocated by browsers
              for the headers elements.
         * 2. Remove bold font weight for the headers elements.
         */
      }

    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      font-size:100%; @if cssions-get("explanations", "explanations comments") { /* 1 */ }
      font-weight:normal; @if cssions-get("explanations", "explanations comments") { /* 2 */ }
    }

  }

  @if yui3-get("parts", "quotations") {

    @if cssions-get("explanations", "explanations comments") {

      @if cssions-get("explanations", "explanations lang") == fr {
        /**
         * On supprime les guillemets d'ouverture et de fermeture.
         */
      }

      @else { 
        /**
         * Remove the opening and closing quotes.
         */
      }

    }

    q:before,
    q:after {
      content:'';
    }

  }

  @if yui3-get("parts", "abbr acronym") {

    @if cssions-get("explanations", "explanations comments") {

      @if cssions-get("explanations", "explanations lang") == fr {
        /**
         * 1. On supprime les eventuelles bordures par defaut des éléments
              "abbr" et "acronym".
         * 2. On harmonise la propriété "font-variant" de ces éléments.
         */
      }

      @else { 
        /**
         * 1. Remove eventual default border allocated by browsers for
              the elements "abbr" and "acronym".
         * 2. Harmonize "font-variant" property for the elements "abbr" 
              and "acronym".
         */
      }

    }

    abbr,
    acronym {
      border:0; @if cssions-get("explanations", "explanations comments") { /* 1 */ }
      font-variant:normal; @if cssions-get("explanations", "explanations comments") { /* 2 */ }
    }

  }

  @if yui3-get("parts", "sub sup") {

    @if cssions-get("explanations", "explanations comments") {

      @if cssions-get("explanations", "explanations lang") == fr {
        /**
         * Pour préserver l'interlignage et l'apparence.
         */
      }

      @else { 
        /**
         * To preserve line-height and selector appearance.
         */
      }

    }

    sup {
      vertical-align:text-top;
    }
    sub {
      vertical-align:text-bottom;
    }

  }

  @if yui3-get("parts", "form elements") {

    @if cssions-get("explanations", "explanations comments") {

      @if cssions-get("explanations", "explanations lang") == fr {
        /**       
         * 1. Correct font properties not being inherited.
         * 2. To enable resizing for IE*.
         */
      }

      @else { 
        /**       
         * 1. Correct font properties not being inherited.
         * 2. To enable resizing for IE*.
         */
      }

    }

    input,
    textarea,
    select {
      font-family:inherit;
      font-size:inherit;
      font-weight:inherit;
      *font-size:100%; @if cssions-get("explanations", "explanations comments") { /* 4 */ }
    }

  }

  @if yui3-get("parts", "legend") {

    @if cssions-get("explanations", "explanations comments") {

      @if cssions-get("explanations", "explanations lang") == fr {
        /**
         * L'élément "légend" n'hérite pas dans IE.
         */
      }

      @else { 
        /**
         * Because legend doesn't inherit in IE.
         */
      }

    }

    legend {
      color:#000;
    }

  }

  @if yui3-get("yui", "yui css detection stamp") {

    @if cssions-get("explanations", "explanations comments") {

      @if cssions-get("explanations", "explanations lang") == fr {
        /**
         * Timbre de détection YUI CSS.
         */
      }

      @else { 
        /**
         * YUI CSS Detection Stamp.
         */
      }

    }

    #yui3-css-stamp.cssreset { 
      display: none; 
    }

  }

}